name: "Release"

on:
  push:
    tags:
      - "v*"

permissions:
  contents: read

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress"
  PROJECT_NAME: 'm4b-tool'
jobs:
  build:
    permissions:
      contents: write # for actions/create-release to create a release
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: "none"
          extensions: "intl"
          ini-values: "memory_limit=128M"
          php-version: "8.2"

      - name: Get version
        id: version
        uses: battila7/get-version-action@v2

      - name: Build
        id: build
        shell: bash
        run: |
          release_name="${{ env.PROJECT_NAME }}-${{ steps.version.outputs.version-without-v }}"
          sed -i "s/@package_version@/${{ steps.version.outputs.version-without-v }}/g" bin/m4b-tool.php
          composer install ${{ env.COMPOSER_FLAGS }} \
            && composer bin box require --dev humbug/box \
            && php -d phar.readonly=off vendor/bin/box compile \
            && chmod +x dist/*.phar  \
            && zip "${release_name}.zip" "./dist/m4b-tool.phar" \
            && tar czvf "${release_name}.tar.gz" "./dist/m4b-tool.phar"
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: doc/release/release-notes-${{ steps.version.outputs.version }}.md
          files: |
            ${release_name}.tar.gz
            ${release_name}.zip
            dist/m4b-tool.phar

#      - name: Configure GPG key and sign phar
#        run: |
#          mkdir -p ~/.gnupg/
#          chmod 0700 ~/.gnupg/
#          echo "$GPG_SIGNING_KEY" > ~/.gnupg/private.key
#          gpg --import ~/.gnupg/private.key
#          gpg -u contact@packagist.com --detach-sign --output composer.phar.asc composer.phar
#        env:
#          GPG_SIGNING_KEY: |
#            ${{ secrets.GPG_KEY_161DFBE342889F01DDAC4E61CBB3D576F2A0946F }}

#      - name: Upload phar signature
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./composer.phar.asc
#          asset_name: composer.phar.asc
#          asset_content_type: application/octet-stream

      # This step requires a secret token with `pull` access to composer/docker. The default
      # secrets.GITHUB_TOKEN is scoped to this repository only which is not sufficient.
#      - name: "Open issue @ Docker repository"
#        uses: actions/github-script@v7
#        with:
#          github-token: ${{ secrets.PUBLIC_REPO_ACCESS_TOKEN }}
#          script: |
#            // github.ref value looks like 'refs/tags/TAG', cleanup
#            const tag = "${{ github.ref }}".replace(/refs\/tags\//, '');
#            // create new issue on Docker repository
#            github.rest.issues.create({
#              owner: "${{ github.repository_owner }}",
#              repo: "docker",
#              title: `New Composer tag: ${ tag }`,
#              body: `https://github.com/${{ github.repository }}/releases/tag/${ tag }`,
#            });
